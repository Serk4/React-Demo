name: CI/CD Pipeline

on:
  push:
    branches: [main, feature/*]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            server/package-lock.json

      - name: Install frontend dependencies
        run: npm ci

      - name: Install backend dependencies
        run: |
          cd server
          npm ci

      - name: Run API tests (with mock mode fallback)
        run: |
          cd server
          npm test
        env:
          NODE_ENV: test

      - name: Build frontend
        run: npm run build

      - name: Test frontend build
        run: |
          if (Test-Path "dist") {
            Write-Host "✅ Frontend build successful"
          } else {
            Write-Host "❌ Frontend build failed"
            exit 1
          }

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci

      - name: Run security audit
        run: |
          npm audit --audit-level moderate || true
          cd server && npm audit --audit-level moderate || true
        continue-on-error: true

  deploy:
    needs: [test, lint, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install and build
        run: |
          npm ci
          npm run build

      - name: Deployment placeholder
        run: |
          echo "🚀 Ready for deployment to staging..."
          echo "✅ All tests passed successfully"
          echo "📦 Build artifacts created"
          echo "🎉 Ready for production deployment"
